---
processes:
- name: web
  executable: /var/vcap/packages/concourse/bin/concourse
  args: [web]
  capabilities: [NET_BIND_SERVICE]

  hooks:
    pre_start: /var/vcap/jobs/web/bin/pre_start

  limits:
    open_files: 65536

  env:
<%
  # fall back to 127.0.0.1 to support single-instance create-env deployed
  # Concourses, which cannot detect their own address
  peer_address = spec.address || "127.0.0.1"
-%>
    CONCOURSE_PEER_ADDRESS: <%= peer_address %>

    CONCOURSE_METRICS_ATTRIBUTE: <%= "bosh_deployment:#{spec.deployment},bosh_job:#{name}".to_json %>

<%
  if_link("web") do |l|
    web_urls = []
    web.instances.each do |instance|
      web_urls << "http://#{instance.address}:#{web.p("bind_port")}"
    end
-%>
    CONCOURSE_TSA_ATC_URL: <%= web_urls.join(",").to_json %>
<%
  end

  if p("external_url", "").empty?
    if_p("tls.bind_port") do |tls_port|
-%>
    CONCOURSE_EXTERNAL_URL: https://<%= peer_address %>:<%= tls_port %>
<%
    end.else do
-%>
    CONCOURSE_EXTERNAL_URL: http://<%= peer_address %>:<%= p("bind_port") %>
<%
    end
  end

  if p("postgresql.host", "").empty?
    if_link("postgres") do |l|
-%>
    CONCOURSE_POSTGRES_HOST: <%= l.instances.first.address.to_json %>
<%
    end
  end
-%>

<%
  # vim: ft=eruby

  def env_flag(v)
    case v
    when Array
      v.join(",")
    when Hash
      v.collect { |k, v| "#{k}:#{v}" }.join(",")
    else
      v.to_s
    end
  end

  def env_file_flag(v, env)
    case v
    when Hash
      v.collect { |k, v| "#{k}:/var/vcap/jobs/web/config/env/#{env}_#{k}" }.join(",")
    else
      "/var/vcap/jobs/web/config/env/#{env}"
    end
  end

  def env_windows_file_flag(v, env)
    case v
    when Hash
      v.collect { |k, v| "#{k}:C:\\var\\vcap\\jobs\\web\\config\\env\\#{env}_#{k}" }.join(",")
    else
      "C:\\var\\vcap\\jobs\\web\\config\\env\\#{env}"
    end
  end
-%>


<% if_p("add_local_users") do |v| -%>
    CONCOURSE_ADD_LOCAL_USER: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("api_max_conns") do |v| -%>
    CONCOURSE_API_MAX_CONNS: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("audit.build") do |v| -%>
    CONCOURSE_ENABLE_BUILD_AUDITING: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("audit.container") do |v| -%>
    CONCOURSE_ENABLE_CONTAINER_AUDITING: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("audit.job") do |v| -%>
    CONCOURSE_ENABLE_JOB_AUDITING: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("audit.pipeline") do |v| -%>
    CONCOURSE_ENABLE_PIPELINE_AUDITING: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("audit.resource") do |v| -%>
    CONCOURSE_ENABLE_RESOURCE_AUDITING: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("audit.system") do |v| -%>
    CONCOURSE_ENABLE_SYSTEM_AUDITING: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("audit.team") do |v| -%>
    CONCOURSE_ENABLE_TEAM_AUDITING: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("audit.volume") do |v| -%>
    CONCOURSE_ENABLE_VOLUME_AUDITING: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("audit.worker") do |v| -%>
    CONCOURSE_ENABLE_WORKER_AUDITING: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("auth_duration") do |v| -%>
    CONCOURSE_AUTH_DURATION: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("aws_secretsmanager.access_key") do |v| -%>
    CONCOURSE_AWS_SECRETSMANAGER_ACCESS_KEY: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("aws_secretsmanager.pipeline_secret_template") do |v| -%>
    CONCOURSE_AWS_SECRETSMANAGER_PIPELINE_SECRET_TEMPLATE: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("aws_secretsmanager.region") do |v| -%>
    CONCOURSE_AWS_SECRETSMANAGER_REGION: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("aws_secretsmanager.secret_key") do |v| -%>
    CONCOURSE_AWS_SECRETSMANAGER_SECRET_KEY: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("aws_secretsmanager.session_token") do |v| -%>
    CONCOURSE_AWS_SECRETSMANAGER_SESSION_TOKEN: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("aws_secretsmanager.shared_secret_template") do |v| -%>
    CONCOURSE_AWS_SECRETSMANAGER_SHARED_SECRET_TEMPLATE: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("aws_secretsmanager.team_secret_template") do |v| -%>
    CONCOURSE_AWS_SECRETSMANAGER_TEAM_SECRET_TEMPLATE: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("aws_ssm.access_key") do |v| -%>
    CONCOURSE_AWS_SSM_ACCESS_KEY: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("aws_ssm.pipeline_secret_template") do |v| -%>
    CONCOURSE_AWS_SSM_PIPELINE_SECRET_TEMPLATE: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("aws_ssm.region") do |v| -%>
    CONCOURSE_AWS_SSM_REGION: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("aws_ssm.secret_key") do |v| -%>
    CONCOURSE_AWS_SSM_SECRET_KEY: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("aws_ssm.session_token") do |v| -%>
    CONCOURSE_AWS_SSM_SESSION_TOKEN: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("aws_ssm.team_secret_template") do |v| -%>
    CONCOURSE_AWS_SSM_TEAM_SECRET_TEMPLATE: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("backend_max_conns") do |v| -%>
    CONCOURSE_BACKEND_MAX_CONNS: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("baggageclaim_response_header_timeout") do |v| -%>
    CONCOURSE_BAGGAGECLAIM_RESPONSE_HEADER_TIMEOUT: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("base_resource_type_defaults") do |v| -%>
    CONCOURSE_BASE_RESOURCE_TYPE_DEFAULTS: <%= env_file_flag(v, "CONCOURSE_BASE_RESOURCE_TYPE_DEFAULTS").to_json %>
<% end -%>

<% if_p("bind_ip") do |v| -%>
    CONCOURSE_BIND_IP: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("bind_port") do |v| -%>
    CONCOURSE_BIND_PORT: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("bitbucket_cloud_auth.client_id") do |v| -%>
    CONCOURSE_BITBUCKET_CLOUD_CLIENT_ID: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("bitbucket_cloud_auth.client_secret") do |v| -%>
    CONCOURSE_BITBUCKET_CLOUD_CLIENT_SECRET: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("build_log_retention.default") do |v| -%>
    CONCOURSE_DEFAULT_BUILD_LOGS_TO_RETAIN: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("build_log_retention.default_builds") do |v| -%>
    CONCOURSE_DEFAULT_BUILD_LOGS_TO_RETAIN: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("build_log_retention.default_days") do |v| -%>
    CONCOURSE_DEFAULT_DAYS_TO_RETAIN_BUILD_LOGS: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("build_log_retention.maximum") do |v| -%>
    CONCOURSE_MAX_BUILD_LOGS_TO_RETAIN: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("build_log_retention.maximum_builds") do |v| -%>
    CONCOURSE_MAX_BUILD_LOGS_TO_RETAIN: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("build_log_retention.maximum_days") do |v| -%>
    CONCOURSE_MAX_DAYS_TO_RETAIN_BUILD_LOGS: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("build_tracker_interval") do |v| -%>
    CONCOURSE_BUILD_TRACKER_INTERVAL: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("capture_error_metrics") do |v| -%>
    CONCOURSE_CAPTURE_ERROR_METRICS: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("cf_auth.api_url") do |v| -%>
    CONCOURSE_CF_API_URL: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("cf_auth.ca_cert.certificate") do |v| -%>
    CONCOURSE_CF_CA_CERT: <%= env_file_flag(v, "CONCOURSE_CF_CA_CERT").to_json %>
<% end -%>

<% if_p("cf_auth.client_id") do |v| -%>
    CONCOURSE_CF_CLIENT_ID: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("cf_auth.client_secret") do |v| -%>
    CONCOURSE_CF_CLIENT_SECRET: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("cf_auth.skip_ssl_validation") do |v| -%>
    CONCOURSE_CF_SKIP_SSL_VALIDATION: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("client_id") do |v| -%>
    CONCOURSE_CLIENT_ID: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("client_secret") do |v| -%>
    CONCOURSE_CLIENT_SECRET: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("cluster_name") do |v| -%>
    CONCOURSE_CLUSTER_NAME: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("component_runner_interval") do |v| -%>
    CONCOURSE_COMPONENT_RUNNER_INTERVAL: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("concurrent_request_limits") do |v| -%>
    CONCOURSE_CONCURRENT_REQUEST_LIMIT: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("config_rbac") do |v| -%>
    CONCOURSE_CONFIG_RBAC: <%= env_file_flag(v, "CONCOURSE_CONFIG_RBAC").to_json %>
<% end -%>

<% if_p("conjur.account") do |v| -%>
    CONCOURSE_CONJUR_ACCOUNT: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("conjur.appliance_url") do |v| -%>
    CONCOURSE_CONJUR_APPLIANCE_URL: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("conjur.auth.api_key") do |v| -%>
    CONCOURSE_CONJUR_AUTHN_API_KEY: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("conjur.auth.login") do |v| -%>
    CONCOURSE_CONJUR_AUTHN_LOGIN: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("conjur.auth.token_file") do |v| -%>
    CONCOURSE_CONJUR_AUTHN_TOKEN_FILE: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("conjur.pipeline_secret_template") do |v| -%>
    CONCOURSE_CONJUR_PIPELINE_SECRET_TEMPLATE: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("conjur.secret_template") do |v| -%>
    CONCOURSE_CONJUR_SECRET_TEMPLATE: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("conjur.team_secret_template") do |v| -%>
    CONCOURSE_CONJUR_TEAM_SECRET_TEMPLATE: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("conjur.tls.ca_cert.certificate") do |v| -%>
    CONCOURSE_CONJUR_CERT_FILE: <%= env_file_flag(v, "CONCOURSE_CONJUR_CERT_FILE").to_json %>
<% end -%>

<% if_p("container_placement_strategies") do |v| -%>
    CONCOURSE_CONTAINER_PLACEMENT_STRATEGY: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("container_placement_strategy") do |v| -%>
    CONCOURSE_CONTAINER_PLACEMENT_STRATEGY: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("content_security_policy") do |v| -%>
    CONCOURSE_CONTENT_SECURITY_POLICY: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("cookie_secure") do |v| -%>
    CONCOURSE_COOKIE_SECURE: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("credhub.client_id") do |v| -%>
    CONCOURSE_CREDHUB_CLIENT_ID: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("credhub.client_secret") do |v| -%>
    CONCOURSE_CREDHUB_CLIENT_SECRET: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("credhub.path_prefix") do |v| -%>
    CONCOURSE_CREDHUB_PATH_PREFIX: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("credhub.tls.ca_cert.certificate") do |v| -%>
    CONCOURSE_CREDHUB_CA_CERT: <%= env_file_flag(v, "CONCOURSE_CREDHUB_CA_CERT").to_json %>
<% end -%>

<% if_p("credhub.tls.client_cert.certificate") do |v| -%>
    CONCOURSE_CREDHUB_CLIENT_CERT: <%= env_file_flag(v, "CONCOURSE_CREDHUB_CLIENT_CERT").to_json %>
<% end -%>

<% if_p("credhub.tls.client_cert.private_key") do |v| -%>
    CONCOURSE_CREDHUB_CLIENT_KEY: <%= env_file_flag(v, "CONCOURSE_CREDHUB_CLIENT_KEY").to_json %>
<% end -%>

<% if_p("credhub.tls.insecure_skip_verify") do |v| -%>
    CONCOURSE_CREDHUB_INSECURE_SKIP_VERIFY: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("credhub.url") do |v| -%>
    CONCOURSE_CREDHUB_URL: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("datadog.agent_host") do |v| -%>
    CONCOURSE_DATADOG_AGENT_HOST: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("datadog.agent_port") do |v| -%>
    CONCOURSE_DATADOG_AGENT_PORT: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("datadog.agent_uds_filepath") do |v| -%>
    CONCOURSE_DATADOG_AGENT_UDS_FILEPATH: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("datadog.prefix") do |v| -%>
    CONCOURSE_DATADOG_PREFIX: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("debug.bind_ip") do |v| -%>
    CONCOURSE_DEBUG_BIND_IP: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("debug.bind_port") do |v| -%>
    CONCOURSE_DEBUG_BIND_PORT: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("debug.godebug") do |v| -%>
    GODEBUG: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("default_check_interval") do |v| -%>
    CONCOURSE_RESOURCE_CHECKING_INTERVAL: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("default_check_interval_with_webhook") do |v| -%>
    CONCOURSE_RESOURCE_WITH_WEBHOOK_CHECKING_INTERVAL: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("default_get_timeout") do |v| -%>
    CONCOURSE_DEFAULT_GET_TIMEOUT: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("default_put_timeout") do |v| -%>
    CONCOURSE_DEFAULT_PUT_TIMEOUT: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("default_task_cpu_limit") do |v| -%>
    CONCOURSE_DEFAULT_TASK_CPU_LIMIT: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("default_task_memory_limit") do |v| -%>
    CONCOURSE_DEFAULT_TASK_MEMORY_LIMIT: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("default_task_timeout") do |v| -%>
    CONCOURSE_DEFAULT_TASK_TIMEOUT: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("displayer_user_id_per_connector") do |v| -%>
    CONCOURSE_DISPLAY_USER_ID_PER_CONNECTOR: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("emit_metrics_to_logs") do |v| -%>
    CONCOURSE_EMIT_TO_LOGS: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("enable_across_step") do |v| -%>
    CONCOURSE_ENABLE_ACROSS_STEP: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("enable_cache_streamed_volumes") do |v| -%>
    CONCOURSE_ENABLE_CACHE_STREAMED_VOLUMES: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("enable_global_resources") do |v| -%>
    CONCOURSE_ENABLE_GLOBAL_RESOURCES: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("enable_pipeline_instances") do |v| -%>
    CONCOURSE_ENABLE_PIPELINE_INSTANCES: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("enable_rerun_when_worker_disappears") do |v| -%>
    CONCOURSE_ENABLE_RERUN_WHEN_WORKER_DISAPPEARS: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("enable_resource_causality") do |v| -%>
    CONCOURSE_ENABLE_RESOURCE_CAUSALITY: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("encryption_key") do |v| -%>
    CONCOURSE_ENCRYPTION_KEY: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("external_url") do |v| -%>
    CONCOURSE_EXTERNAL_URL: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("garden_request_timeout") do |v| -%>
    CONCOURSE_GARDEN_REQUEST_TIMEOUT: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("gc.check_recycle_period") do |v| -%>
    CONCOURSE_GC_CHECK_RECYCLE_PERIOD: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("gc.failed_grace_period") do |v| -%>
    CONCOURSE_GC_FAILED_GRACE_PERIOD: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("gc.hijack_grace_period") do |v| -%>
    CONCOURSE_GC_HIJACK_GRACE_PERIOD: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("gc.interval") do |v| -%>
    CONCOURSE_GC_INTERVAL: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("gc.missing_grace_period") do |v| -%>
    CONCOURSE_GC_MISSING_GRACE_PERIOD: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("gc.one_off_grace_period") do |v| -%>
    CONCOURSE_GC_ONE_OFF_GRACE_PERIOD: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("gc.var_source_recycle_period") do |v| -%>
    CONCOURSE_GC_VAR_SOURCE_RECYCLE_PERIOD: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("gc_interval") do |v| -%>
    CONCOURSE_GC_INTERVAL: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("generic_oauth.auth_url") do |v| -%>
    CONCOURSE_OAUTH_AUTH_URL: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("generic_oauth.ca_cert.certificate") do |v| -%>
    CONCOURSE_OAUTH_CA_CERT: <%= env_file_flag(v, "CONCOURSE_OAUTH_CA_CERT").to_json %>
<% end -%>

<% if_p("generic_oauth.client_id") do |v| -%>
    CONCOURSE_OAUTH_CLIENT_ID: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("generic_oauth.client_secret") do |v| -%>
    CONCOURSE_OAUTH_CLIENT_SECRET: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("generic_oauth.display_name") do |v| -%>
    CONCOURSE_OAUTH_DISPLAY_NAME: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("generic_oauth.groups_key") do |v| -%>
    CONCOURSE_OAUTH_GROUPS_KEY: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("generic_oauth.scopes") do |v| -%>
    CONCOURSE_OAUTH_SCOPE: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("generic_oauth.skip_ssl_validation") do |v| -%>
    CONCOURSE_OAUTH_SKIP_SSL_VALIDATION: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("generic_oauth.token_url") do |v| -%>
    CONCOURSE_OAUTH_TOKEN_URL: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("generic_oauth.user_id_key") do |v| -%>
    CONCOURSE_OAUTH_USER_ID_KEY: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("generic_oauth.user_name_key") do |v| -%>
    CONCOURSE_OAUTH_USER_NAME_KEY: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("generic_oauth.userinfo_url") do |v| -%>
    CONCOURSE_OAUTH_USERINFO_URL: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("generic_oidc.ca_cert.certificate") do |v| -%>
    CONCOURSE_OIDC_CA_CERT: <%= env_file_flag(v, "CONCOURSE_OIDC_CA_CERT").to_json %>
<% end -%>

<% if_p("generic_oidc.client_id") do |v| -%>
    CONCOURSE_OIDC_CLIENT_ID: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("generic_oidc.client_secret") do |v| -%>
    CONCOURSE_OIDC_CLIENT_SECRET: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("generic_oidc.disable_get_user_info") do |v| -%>
    CONCOURSE_OIDC_DISABLE_GET_USER_INFO: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("generic_oidc.disable_groups") do |v| -%>
    CONCOURSE_OIDC_DISABLE_GROUPS: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("generic_oidc.display_name") do |v| -%>
    CONCOURSE_OIDC_DISPLAY_NAME: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("generic_oidc.groups_key") do |v| -%>
    CONCOURSE_OIDC_GROUPS_KEY: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("generic_oidc.issuer") do |v| -%>
    CONCOURSE_OIDC_ISSUER: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("generic_oidc.scopes") do |v| -%>
    CONCOURSE_OIDC_SCOPE: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("generic_oidc.skip_email_verified_validation") do |v| -%>
    CONCOURSE_OIDC_SKIP_EMAIL_VERIFIED_VALIDATION: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("generic_oidc.skip_ssl_validation") do |v| -%>
    CONCOURSE_OIDC_SKIP_SSL_VALIDATION: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("generic_oidc.user_name_key") do |v| -%>
    CONCOURSE_OIDC_USER_NAME_KEY: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("github_auth.ca_cert.certificate") do |v| -%>
    CONCOURSE_GITHUB_CA_CERT: <%= env_file_flag(v, "CONCOURSE_GITHUB_CA_CERT").to_json %>
<% end -%>

<% if_p("github_auth.client_id") do |v| -%>
    CONCOURSE_GITHUB_CLIENT_ID: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("github_auth.client_secret") do |v| -%>
    CONCOURSE_GITHUB_CLIENT_SECRET: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("github_auth.host") do |v| -%>
    CONCOURSE_GITHUB_HOST: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("gitlab_auth.client_id") do |v| -%>
    CONCOURSE_GITLAB_CLIENT_ID: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("gitlab_auth.client_secret") do |v| -%>
    CONCOURSE_GITLAB_CLIENT_SECRET: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("gitlab_auth.host") do |v| -%>
    CONCOURSE_GITLAB_HOST: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("global_resource_check_timeout") do |v| -%>
    CONCOURSE_GLOBAL_RESOURCE_CHECK_TIMEOUT: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("influxdb.batch_duration") do |v| -%>
    CONCOURSE_INFLUXDB_BATCH_DURATION: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("influxdb.batch_size") do |v| -%>
    CONCOURSE_INFLUXDB_BATCH_SIZE: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("influxdb.database") do |v| -%>
    CONCOURSE_INFLUXDB_DATABASE: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("influxdb.insecure_skip_verify") do |v| -%>
    CONCOURSE_INFLUXDB_INSECURE_SKIP_VERIFY: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("influxdb.password") do |v| -%>
    CONCOURSE_INFLUXDB_PASSWORD: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("influxdb.url") do |v| -%>
    CONCOURSE_INFLUXDB_URL: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("influxdb.username") do |v| -%>
    CONCOURSE_INFLUXDB_USERNAME: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("intercept_idle_timeout") do |v| -%>
    CONCOURSE_INTERCEPT_IDLE_TIMEOUT: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("job_scheduling_max_in_flight") do |v| -%>
    CONCOURSE_JOB_SCHEDULING_MAX_IN_FLIGHT: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("ldap_auth.bind_dn") do |v| -%>
    CONCOURSE_LDAP_BIND_DN: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("ldap_auth.bind_pw") do |v| -%>
    CONCOURSE_LDAP_BIND_PW: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("ldap_auth.ca_cert.certificate") do |v| -%>
    CONCOURSE_LDAP_CA_CERT: <%= env_file_flag(v, "CONCOURSE_LDAP_CA_CERT").to_json %>
<% end -%>

<% if_p("ldap_auth.display_name") do |v| -%>
    CONCOURSE_LDAP_DISPLAY_NAME: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("ldap_auth.group_search_base_dn") do |v| -%>
    CONCOURSE_LDAP_GROUP_SEARCH_BASE_DN: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("ldap_auth.group_search_filter") do |v| -%>
    CONCOURSE_LDAP_GROUP_SEARCH_FILTER: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("ldap_auth.group_search_group_attr") do |v| -%>
    CONCOURSE_LDAP_GROUP_SEARCH_GROUP_ATTR: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("ldap_auth.group_search_name_attr") do |v| -%>
    CONCOURSE_LDAP_GROUP_SEARCH_NAME_ATTR: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("ldap_auth.group_search_scope") do |v| -%>
    CONCOURSE_LDAP_GROUP_SEARCH_SCOPE: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("ldap_auth.group_search_user_attr") do |v| -%>
    CONCOURSE_LDAP_GROUP_SEARCH_USER_ATTR: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("ldap_auth.host") do |v| -%>
    CONCOURSE_LDAP_HOST: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("ldap_auth.insecure_no_ssl") do |v| -%>
    CONCOURSE_LDAP_INSECURE_NO_SSL: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("ldap_auth.insecure_skip_verify") do |v| -%>
    CONCOURSE_LDAP_INSECURE_SKIP_VERIFY: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("ldap_auth.start_tls") do |v| -%>
    CONCOURSE_LDAP_START_TLS: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("ldap_auth.user_search_base_dn") do |v| -%>
    CONCOURSE_LDAP_USER_SEARCH_BASE_DN: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("ldap_auth.user_search_email_attr") do |v| -%>
    CONCOURSE_LDAP_USER_SEARCH_EMAIL_ATTR: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("ldap_auth.user_search_filter") do |v| -%>
    CONCOURSE_LDAP_USER_SEARCH_FILTER: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("ldap_auth.user_search_id_attr") do |v| -%>
    CONCOURSE_LDAP_USER_SEARCH_ID_ATTR: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("ldap_auth.user_search_name_attr") do |v| -%>
    CONCOURSE_LDAP_USER_SEARCH_NAME_ATTR: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("ldap_auth.user_search_scope") do |v| -%>
    CONCOURSE_LDAP_USER_SEARCH_SCOPE: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("ldap_auth.user_search_username") do |v| -%>
    CONCOURSE_LDAP_USER_SEARCH_USERNAME: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("ldap_auth.username_prompt") do |v| -%>
    CONCOURSE_LDAP_USERNAME_PROMPT: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("lets_encrypt.acme_url") do |v| -%>
    CONCOURSE_LETS_ENCRYPT_ACME_URL: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("lets_encrypt.enabled") do |v| -%>
    CONCOURSE_ENABLE_LETS_ENCRYPT: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("lidar_scanner_interval") do |v| -%>
    CONCOURSE_LIDAR_SCANNER_INTERVAL: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("log_cluster_name") do |v| -%>
    CONCOURSE_LOG_CLUSTER_NAME: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("log_db_queries") do |v| -%>
    CONCOURSE_LOG_DB_QUERIES: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("log_level") do |v| -%>
    CONCOURSE_LOG_LEVEL: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("main_team.auth.bitbucket_cloud.teams") do |v| -%>
    CONCOURSE_MAIN_TEAM_BITBUCKET_CLOUD_TEAM: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("main_team.auth.bitbucket_cloud.users") do |v| -%>
    CONCOURSE_MAIN_TEAM_BITBUCKET_CLOUD_USER: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("main_team.auth.cf.orgs") do |v| -%>
    CONCOURSE_MAIN_TEAM_CF_ORG: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("main_team.auth.cf.space_guids") do |v| -%>
    CONCOURSE_MAIN_TEAM_CF_SPACE_GUID: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("main_team.auth.cf.spaces") do |v| -%>
    CONCOURSE_MAIN_TEAM_CF_SPACE: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("main_team.auth.cf.spaces_with_any_role") do |v| -%>
    CONCOURSE_MAIN_TEAM_CF_SPACE_WITH_ANY_ROLE: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("main_team.auth.cf.spaces_with_auditor_role") do |v| -%>
    CONCOURSE_MAIN_TEAM_CF_SPACE_WITH_AUDITOR_ROLE: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("main_team.auth.cf.spaces_with_developer_role") do |v| -%>
    CONCOURSE_MAIN_TEAM_CF_SPACE_WITH_DEVELOPER_ROLE: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("main_team.auth.cf.spaces_with_manager_role") do |v| -%>
    CONCOURSE_MAIN_TEAM_CF_SPACE_WITH_MANAGER_ROLE: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("main_team.auth.cf.users") do |v| -%>
    CONCOURSE_MAIN_TEAM_CF_USER: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("main_team.auth.config") do |v| -%>
    CONCOURSE_MAIN_TEAM_CONFIG: <%= env_file_flag(v, "CONCOURSE_MAIN_TEAM_CONFIG").to_json %>
<% end -%>

<% if_p("main_team.auth.github.orgs") do |v| -%>
    CONCOURSE_MAIN_TEAM_GITHUB_ORG: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("main_team.auth.github.teams") do |v| -%>
    CONCOURSE_MAIN_TEAM_GITHUB_TEAM: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("main_team.auth.github.users") do |v| -%>
    CONCOURSE_MAIN_TEAM_GITHUB_USER: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("main_team.auth.gitlab.groups") do |v| -%>
    CONCOURSE_MAIN_TEAM_GITLAB_GROUP: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("main_team.auth.gitlab.users") do |v| -%>
    CONCOURSE_MAIN_TEAM_GITLAB_USER: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("main_team.auth.ldap.groups") do |v| -%>
    CONCOURSE_MAIN_TEAM_LDAP_GROUP: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("main_team.auth.ldap.users") do |v| -%>
    CONCOURSE_MAIN_TEAM_LDAP_USER: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("main_team.auth.local.users") do |v| -%>
    CONCOURSE_MAIN_TEAM_LOCAL_USER: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("main_team.auth.microsoft.groups") do |v| -%>
    CONCOURSE_MAIN_TEAM_MICROSOFT_GROUP: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("main_team.auth.microsoft.users") do |v| -%>
    CONCOURSE_MAIN_TEAM_MICROSOFT_USER: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("main_team.auth.oauth.groups") do |v| -%>
    CONCOURSE_MAIN_TEAM_OAUTH_GROUP: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("main_team.auth.oauth.users") do |v| -%>
    CONCOURSE_MAIN_TEAM_OAUTH_USER: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("main_team.auth.oidc.groups") do |v| -%>
    CONCOURSE_MAIN_TEAM_OIDC_GROUP: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("main_team.auth.oidc.users") do |v| -%>
    CONCOURSE_MAIN_TEAM_OIDC_USER: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("main_team.auth.saml.groups") do |v| -%>
    CONCOURSE_MAIN_TEAM_SAML_GROUP: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("main_team.auth.saml.users") do |v| -%>
    CONCOURSE_MAIN_TEAM_SAML_USER: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("max_active_containers_per_worker") do |v| -%>
    CONCOURSE_MAX_ACTIVE_CONTAINERS_PER_WORKER: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("max_active_tasks_per_worker") do |v| -%>
    CONCOURSE_MAX_ACTIVE_TASKS_PER_WORKER: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("max_active_volumes_per_worker") do |v| -%>
    CONCOURSE_MAX_ACTIVE_VOLUMES_PER_WORKER: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("max_checks_per_second") do |v| -%>
    CONCOURSE_MAX_CHECKS_PER_SECOND: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("metrics_buffer_size") do |v| -%>
    CONCOURSE_METRICS_BUFFER_SIZE: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("microsoft_auth.client_id") do |v| -%>
    CONCOURSE_MICROSOFT_CLIENT_ID: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("microsoft_auth.client_secret") do |v| -%>
    CONCOURSE_MICROSOFT_CLIENT_SECRET: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("microsoft_auth.groups") do |v| -%>
    CONCOURSE_MICROSOFT_GROUPS: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("microsoft_auth.only_security_groups") do |v| -%>
    CONCOURSE_MICROSOFT_ONLY_SECURITY_GROUPS: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("microsoft_auth.tenant") do |v| -%>
    CONCOURSE_MICROSOFT_TENANT: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("newrelic.account_id") do |v| -%>
    CONCOURSE_NEWRELIC_ACCOUNT_ID: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("newrelic.api_key") do |v| -%>
    CONCOURSE_NEWRELIC_API_KEY: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("newrelic.batch_duration") do |v| -%>
    CONCOURSE_NEWRELIC_BATCH_DURATION: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("newrelic.batch_size") do |v| -%>
    CONCOURSE_NEWRELIC_BATCH_SIZE: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("newrelic.disable_compression") do |v| -%>
    CONCOURSE_NEWRELIC_BATCH_DISABLE_COMPRESSION: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("newrelic.service_prefix") do |v| -%>
    CONCOURSE_NEWRELIC_SERVICE_PREFIX: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("newrelic.url") do |v| -%>
    CONCOURSE_NEWRELIC_INSIGHTS_API_URL: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("no_input_container_placement_strategies") do |v| -%>
    CONCOURSE_NO_INPUT_CONTAINER_PLACEMENT_STRATEGY: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("no_input_container_placement_strategy") do |v| -%>
    CONCOURSE_NO_INPUT_CONTAINER_PLACEMENT_STRATEGY: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("check_container_placement_strategies") do |v| -%>
    CONCOURSE_CHECK_CONTAINER_PLACEMENT_STRATEGY: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("check_container_placement_strategy") do |v| -%>
    CONCOURSE_CHECK_CONTAINER_PLACEMENT_STRATEGY: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("old_encryption_key") do |v| -%>
    CONCOURSE_OLD_ENCRYPTION_KEY: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("opa.result.allowed_key") do |v| -%>
    CONCOURSE_OPA_RESULT_ALLOWED_KEY: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("opa.result.messages_key") do |v| -%>
    CONCOURSE_OPA_RESULT_MESSAGES_KEY: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("opa.result.should_block_key") do |v| -%>
    CONCOURSE_OPA_RESULT_SHOULD_BLOCK_KEY: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("opa.timeout") do |v| -%>
    CONCOURSE_OPA_TIMEOUT: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("opa.url") do |v| -%>
    CONCOURSE_OPA_URL: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("p2p.enable") do |v| -%>
    CONCOURSE_ENABLE_P2P_VOLUME_STREAMING: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("p2p.stream_timeout") do |v| -%>
    CONCOURSE_P2P_VOLUME_STREAMING_TIMEOUT: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("password_connector") do |v| -%>
    CONCOURSE_PASSWORD_CONNECTOR: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("pause_pipelines_after") do |v| -%>
    CONCOURSE_PAUSE_PIPELINES_AFTER: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("policy_check.filter_actions") do |v| -%>
    CONCOURSE_POLICY_CHECK_FILTER_ACTION: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("policy_check.filter_http_methods") do |v| -%>
    CONCOURSE_POLICY_CHECK_FILTER_HTTP_METHOD: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("policy_check.skip_actions") do |v| -%>
    CONCOURSE_POLICY_CHECK_FILTER_ACTION_SKIP: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("postgresql.ca_cert.certificate") do |v| -%>
    CONCOURSE_POSTGRES_CA_CERT: <%= env_file_flag(v, "CONCOURSE_POSTGRES_CA_CERT").to_json %>
<% end -%>

<% if_p("postgresql.client_cert.certificate") do |v| -%>
    CONCOURSE_POSTGRES_CLIENT_CERT: <%= env_file_flag(v, "CONCOURSE_POSTGRES_CLIENT_CERT").to_json %>
<% end -%>

<% if_p("postgresql.client_cert.private_key") do |v| -%>
    CONCOURSE_POSTGRES_CLIENT_KEY: <%= env_file_flag(v, "CONCOURSE_POSTGRES_CLIENT_KEY").to_json %>
<% end -%>

<% if_p("postgresql.connect_timeout") do |v| -%>
    CONCOURSE_POSTGRES_CONNECT_TIMEOUT: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("postgresql.database") do |v| -%>
    CONCOURSE_POSTGRES_DATABASE: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("postgresql.host") do |v| -%>
    CONCOURSE_POSTGRES_HOST: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("postgresql.port") do |v| -%>
    CONCOURSE_POSTGRES_PORT: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("postgresql.role.name") do |v| -%>
    CONCOURSE_POSTGRES_USER: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("postgresql.role.password") do |v| -%>
    CONCOURSE_POSTGRES_PASSWORD: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("postgresql.socket") do |v| -%>
    CONCOURSE_POSTGRES_SOCKET: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("postgresql.sslmode") do |v| -%>
    CONCOURSE_POSTGRES_SSLMODE: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("prometheus.bind_ip") do |v| -%>
    CONCOURSE_PROMETHEUS_BIND_IP: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("prometheus.bind_port") do |v| -%>
    CONCOURSE_PROMETHEUS_BIND_PORT: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("redact_secrets") do |v| -%>
    CONCOURSE_ENABLE_REDACT_SECRETS: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("saml_auth.ca_cert.certificate") do |v| -%>
    CONCOURSE_SAML_CA_CERT: <%= env_file_flag(v, "CONCOURSE_SAML_CA_CERT").to_json %>
<% end -%>

<% if_p("saml_auth.display_name") do |v| -%>
    CONCOURSE_SAML_DISPLAY_NAME: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("saml_auth.email_attr") do |v| -%>
    CONCOURSE_SAML_EMAIL_ATTR: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("saml_auth.entity_issuer") do |v| -%>
    CONCOURSE_SAML_ENTITY_ISSUER: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("saml_auth.groups_attr") do |v| -%>
    CONCOURSE_SAML_GROUPS_ATTR: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("saml_auth.groups_delim") do |v| -%>
    CONCOURSE_SAML_GROUPS_DELIM: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("saml_auth.insecure_skip_verify") do |v| -%>
    CONCOURSE_SAML_SKIP_SSL_VALIDATION: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("saml_auth.name_id_policy_format") do |v| -%>
    CONCOURSE_SAML_NAME_ID_POLICY_FORMAT: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("saml_auth.sso_issuer") do |v| -%>
    CONCOURSE_SAML_SSO_ISSUER: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("saml_auth.sso_url") do |v| -%>
    CONCOURSE_SAML_SSO_URL: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("saml_auth.username_attr") do |v| -%>
    CONCOURSE_SAML_USERNAME_ATTR: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("secrets.cache.duration") do |v| -%>
    CONCOURSE_SECRET_CACHE_DURATION: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("secrets.cache.duration_notfound") do |v| -%>
    CONCOURSE_SECRET_CACHE_DURATION_NOTFOUND: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("secrets.cache.enabled") do |v| -%>
    CONCOURSE_SECRET_CACHE_ENABLED: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("secrets.cache.purge_interval") do |v| -%>
    CONCOURSE_SECRET_CACHE_PURGE_INTERVAL: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("secrets.retry_attempts") do |v| -%>
    CONCOURSE_SECRET_RETRY_ATTEMPTS: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("secrets.retry_interval") do |v| -%>
    CONCOURSE_SECRET_RETRY_INTERVAL: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("streaming_artifacts_compression") do |v| -%>
    CONCOURSE_STREAMING_ARTIFACTS_COMPRESSION: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("syslog.address") do |v| -%>
    CONCOURSE_SYSLOG_ADDRESS: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("syslog.ca_cert.certificate") do |v| -%>
    CONCOURSE_SYSLOG_CA_CERT: <%= env_file_flag(v, "CONCOURSE_SYSLOG_CA_CERT").to_json %>
<% end -%>

<% if_p("syslog.drain_interval") do |v| -%>
    CONCOURSE_SYSLOG_DRAIN_INTERVAL: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("syslog.hostname") do |v| -%>
    CONCOURSE_SYSLOG_HOSTNAME: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("syslog.transport") do |v| -%>
    CONCOURSE_SYSLOG_TRANSPORT: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("tls.bind_port") do |v| -%>
    CONCOURSE_TLS_BIND_PORT: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("tls.cert.ca") do |v| -%>
    CONCOURSE_TLS_CA_CERT: <%= env_file_flag(v, "CONCOURSE_TLS_CA_CERT").to_json %>
<% end -%>

<% if_p("tls.cert.certificate") do |v| -%>
    CONCOURSE_TLS_CERT: <%= env_file_flag(v, "CONCOURSE_TLS_CERT").to_json %>
<% end -%>

<% if_p("tls.cert.private_key") do |v| -%>
    CONCOURSE_TLS_KEY: <%= env_file_flag(v, "CONCOURSE_TLS_KEY").to_json %>
<% end -%>

<% if_p("tls_bind_port") do |v| -%>
    CONCOURSE_TLS_BIND_PORT: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("tls_cert") do |v| -%>
    CONCOURSE_TLS_CERT: <%= env_file_flag(v, "CONCOURSE_TLS_CERT").to_json %>
<% end -%>

<% if_p("tls_key") do |v| -%>
    CONCOURSE_TLS_KEY: <%= env_file_flag(v, "CONCOURSE_TLS_KEY").to_json %>
<% end -%>

<% if_p("token_signing_key.private_key") do |v| -%>
    CONCOURSE_SESSION_SIGNING_KEY: <%= env_file_flag(v, "CONCOURSE_SESSION_SIGNING_KEY").to_json %>
<% end -%>

<% if_p("tracing.attributes") do |v| -%>
    CONCOURSE_TRACING_ATTRIBUTE: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("tracing.honeycomb_api_key") do |v| -%>
    CONCOURSE_TRACING_HONEYCOMB_API_KEY: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("tracing.honeycomb_dataset") do |v| -%>
    CONCOURSE_TRACING_HONEYCOMB_DATASET: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("tracing.jaeger_endpoint") do |v| -%>
    CONCOURSE_TRACING_JAEGER_ENDPOINT: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("tracing.jaeger_service") do |v| -%>
    CONCOURSE_TRACING_JAEGER_SERVICE: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("tracing.jaeger_tags") do |v| -%>
    CONCOURSE_TRACING_JAEGER_TAGS: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("tracing.otlp_address") do |v| -%>
    CONCOURSE_TRACING_OTLP_ADDRESS: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("tracing.otlp_headers") do |v| -%>
    CONCOURSE_TRACING_OTLP_HEADER: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("tracing.otlp_use_tls") do |v| -%>
    CONCOURSE_TRACING_OTLP_USE_TLS: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("tracing.service_name") do |v| -%>
    CONCOURSE_TRACING_SERVICE_NAME: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("tracing.stackdriver_projectid") do |v| -%>
    CONCOURSE_TRACING_STACKDRIVER_PROJECTID: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("vault.auth.backend") do |v| -%>
    CONCOURSE_VAULT_AUTH_BACKEND: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("vault.auth.backend_max_ttl") do |v| -%>
    CONCOURSE_VAULT_AUTH_BACKEND_MAX_TTL: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("vault.auth.client_token") do |v| -%>
    CONCOURSE_VAULT_CLIENT_TOKEN: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("vault.auth.params") do |v| -%>
    CONCOURSE_VAULT_AUTH_PARAM: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("vault.disable_srv_lookup") do |v| -%>
    CONCOURSE_VAULT_DISABLE_SRV_LOOKUP: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("vault.login_timeout") do |v| -%>
    CONCOURSE_VAULT_LOGIN_TIMEOUT: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("vault.lookup_templates") do |v| -%>
    CONCOURSE_VAULT_LOOKUP_TEMPLATES: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("vault.namespace") do |v| -%>
    CONCOURSE_VAULT_NAMESPACE: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("vault.path_prefix") do |v| -%>
    CONCOURSE_VAULT_PATH_PREFIX: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("vault.query_timeout") do |v| -%>
    CONCOURSE_VAULT_QUERY_TIMEOUT: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("vault.retry.initial") do |v| -%>
    CONCOURSE_VAULT_RETRY_INITIAL: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("vault.retry.max") do |v| -%>
    CONCOURSE_VAULT_RETRY_MAX: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("vault.shared_path") do |v| -%>
    CONCOURSE_VAULT_SHARED_PATH: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("vault.tls.ca_cert.certificate") do |v| -%>
    CONCOURSE_VAULT_CA_CERT: <%= env_file_flag(v, "CONCOURSE_VAULT_CA_CERT").to_json %>
<% end -%>

<% if_p("vault.tls.client_cert.certificate") do |v| -%>
    CONCOURSE_VAULT_CLIENT_CERT: <%= env_file_flag(v, "CONCOURSE_VAULT_CLIENT_CERT").to_json %>
<% end -%>

<% if_p("vault.tls.client_cert.private_key") do |v| -%>
    CONCOURSE_VAULT_CLIENT_KEY: <%= env_file_flag(v, "CONCOURSE_VAULT_CLIENT_KEY").to_json %>
<% end -%>

<% if_p("vault.tls.insecure_skip_verify") do |v| -%>
    CONCOURSE_VAULT_INSECURE_SKIP_VERIFY: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("vault.tls.server_name") do |v| -%>
    CONCOURSE_VAULT_SERVER_NAME: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("vault.url") do |v| -%>
    CONCOURSE_VAULT_URL: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("worker_gateway.authorized_keys") do |v| -%>
    CONCOURSE_TSA_AUTHORIZED_KEYS: <%= env_file_flag(v, "CONCOURSE_TSA_AUTHORIZED_KEYS").to_json %>
<% end -%>

<% if_p("worker_gateway.bind_port") do |v| -%>
    CONCOURSE_TSA_BIND_PORT: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("worker_gateway.client_id") do |v| -%>
    CONCOURSE_TSA_CLIENT_ID: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("worker_gateway.client_secret") do |v| -%>
    CONCOURSE_TSA_CLIENT_SECRET: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("worker_gateway.garden_request_timeout") do |v| -%>
    CONCOURSE_TSA_GARDEN_REQUEST_TIMEOUT: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("worker_gateway.heartbeat_interval") do |v| -%>
    CONCOURSE_TSA_HEARTBEAT_INTERVAL: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("worker_gateway.host_key.private_key") do |v| -%>
    CONCOURSE_TSA_HOST_KEY: <%= env_file_flag(v, "CONCOURSE_TSA_HOST_KEY").to_json %>
<% end -%>

<% if_p("worker_gateway.log_level") do |v| -%>
    CONCOURSE_TSA_LOG_LEVEL: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("worker_gateway.team_authorized_keys") do |v| -%>
    CONCOURSE_TSA_TEAM_AUTHORIZED_KEYS: <%= env_file_flag(v, "CONCOURSE_TSA_TEAM_AUTHORIZED_KEYS").to_json %>
<% end -%>

<% if_p("x_frame_options") do |v| -%>
    CONCOURSE_X_FRAME_OPTIONS: <%= env_flag(v).to_json %>
<% end -%>

